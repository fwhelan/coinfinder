cmake_minimum_required(VERSION 3.6)
project(coinfinder)

set(CMAKE_CXX_STANDARD 14)
set(CMAKE_CXX_STANDARD_REQUIRED ON)
set(CMAKE_CXX_EXTENSIONS OFF)

set(Boost_USE_STATIC_LIBS ON)

set(SOURCE_FILES main.cpp id_lookup.cpp id_lookup.h dataset.cpp dataset.h coincidence.cpp coincidence.h connectivity.cpp connectivity.h binomial_test.cpp binomial_test.h significance.cpp significance.h constants.h parameters.cpp parameters.h elements.cpp elements.h test_cases.cpp test_cases.h phylomax.py common_ancestor.py bugfix.h bugfix.cpp lineage.cpp lineage.h gexf.cpp gexf.h network.cpp network.h)
add_executable(coinfinder ${SOURCE_FILES})

target_compile_features(coinfinder PRIVATE cxx_std_14)

find_package(PythonInterp 3.6 REQUIRED)
find_package(PythonLibs 3.6 REQUIRED)
include_directories(${PYTHON_INCLUDE_DIRS})
target_link_libraries(coinfinder ${PYTHON_LIBRARIES})

#set(Boost_INCLUDE_DIR /Users/s23410fw/Documents/software/boost_1_66_0)
#set(BOOST_LIBRARYDIR /Users/s23410fw/Documents/software/boost_1_66_0/libs/)
#set(BOOST_ROOT /Users/s23410fw/Documents/software/boost_1_66_0)
find_package(Boost COMPONENTS filesystem system REQUIRED)
include_directories(${Boost_INCLUDE_DIR})
link_directories(${Boost_LIBRARY_DIR})
target_link_libraries(coinfinder ${Boost_LIBRARIES})

#set(CMAKE_C_COMPILER "/Users/s23410fw/Documents/software/clang+llvm-7.0.0-x86_64-apple-darwin/bin/clang")
#set(CMAKE_CXX_COMPILER "/Users/s23410fw/Documents/software/clang+llvm-7.0.0-x86_64-apple-darwin/bin/clang++")
#set(OpenMP_LIBRARIES "/Users/s23410fw/Documents/software/clang+llvm-7.0.0-x86_64-apple-darwin/lib")
#set(OpenMP_INCLUDES "/Users/s23410fw/Documents/software/clang+llvm-7.0.0-x86_64-apple-darwin/lib/clang/7.0.0/include/")
#set(OpenMP_C "${CMAKE_CXX_COMPILER}")
#set(OpenMP_C_FLAGS "-fopenmp")
#set(OpenMP_C_LIB_NAMES "libomp" "libgomp" "libiomp5")
#set(OpenMP_CXX_FLAGS "-fopenmp")
#set(OpenMP_CXX_LIB_NAMES "libomp" "libgomp" "libiomp5")
#set(OpenMP_libomp_LIBRARY ${OpenMP_CXX_LIB_NAMES})
#set(OpenMP_libgomp_LIBRARY ${OpenMP_CXX_LIB_NAMES})
#set(OpenMP_libiomp5_LIBRARY ${OpenMP_CXX_LIB_NAMES})
find_package(OpenMP)
if (OPENMP_FOUND)
    set (CMAKE_C_FLAGS "${CMAKE_C_FLAGS} ${OpenMP_C_FLAGS}")
    set (CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${OpenMP_CXX_FLAGS}")
endif()
